{
  "name": "@ddalab/configmanager",
  "version": "1.0.1-dev.1",
  "private": true,
  "description": "An application to help configure .env files.",
  "main": "dist/main.js",
  "scripts": {
    "build": "node esbuild.config.mjs",
    "build-icons": "node scripts/create-simple-icon.js",
    "dev": "node esbuild.config.mjs --watch",
    "lint": "eslint .",
    "typecheck": "tsc --noEmit",
    "start": "npm run build && NODE_ENV=development electron .",
    "start:test": "npm run build && NODE_ENV=test ELECTRON_IS_TESTING=true electron .",
    "start:prod": "npm run build && NODE_ENV=production ELECTRON_IS_PRODUCTION=true electron .",
    "watch": "tsc -w",
    "test": "echo \"Error: no test specified\" && exit 1",
    "package": "npm run build && electron-builder",
    "package:win": "npm run build && electron-builder --win",
    "package:mac": "npm run build && electron-builder --mac",
    "package:linux": "npm run build && electron-builder --linux",
    "publish": "npm run build && electron-builder --publish=always",
    "package:dev": "npm run build && node scripts/create-simple-icon.js && electron-builder --config electron-builder.dev.json",
    "package:dev:win": "npm run build && electron-builder --config electron-builder.dev.json --win",
    "package:dev:mac": "npm run build && electron-builder --config electron-builder.dev.json --mac",
    "package:dev:mac:arm64": "npm run build && electron-builder --config electron-builder.dev.json --mac --arm64",
    "package:dev:mac:x64": "npm run build && electron-builder --config electron-builder.dev.json --mac --x64",
    "package:dev:linux": "npm run build && electron-builder --config electron-builder.dev.json --linux",
    "package:dev:linux:appimage": "npm run build && electron-builder --config electron-builder.dev.json --linux AppImage",
    "package:dev:linux:deb": "npm run build && electron-builder --config electron-builder.dev.json --linux deb",
    "package:dev:linux:rpm": "npm run build && electron-builder --config electron-builder.dev.json --linux rpm",
    "package:dev:linux:tar": "npm run build && electron-builder --config electron-builder.dev.json --linux tar.gz",
    "publish:dev": "npm run build && node scripts/create-simple-icon.js && electron-builder --config electron-builder.dev.json --publish=always",
    "publish:dev:mac": "npm run build && node scripts/create-simple-icon.js && electron-builder --config electron-builder.dev.json --publish=always --mac",
    "publish:dev:mac:arm64": "npm run build && node scripts/create-simple-icon.js && electron-builder --config electron-builder.dev.json --publish=always --mac --arm64",
    "publish:dev:mac:x64": "npm run build && node scripts/create-simple-icon.js && electron-builder --config electron-builder.dev.json --publish=always --mac --x64",
    "publish:dev:win": "npm run build && node scripts/create-simple-icon.js && electron-builder --config electron-builder.dev.json --publish=always --win",
    "publish:dev:win:arm64": "npm run build && node scripts/create-simple-icon.js && electron-builder --config electron-builder.dev.json --publish=always --win --arm64",
    "publish:dev:win:x64": "npm run build && node scripts/create-simple-icon.js && electron-builder --config electron-builder.dev.json --publish=always --win --x64",
    "publish:dev:linux": "npm run build && node scripts/create-simple-icon.js && electron-builder --config electron-builder.dev.json --publish=always --linux",
    "publish:dev:linux:appimage": "npm run build && node scripts/create-simple-icon.js && electron-builder --config electron-builder.dev.json --publish=always --linux AppImage",
    "publish:dev:linux:deb": "npm run build && node scripts/create-simple-icon.js && electron-builder --config electron-builder.dev.json --publish=always --linux deb",
    "publish:dev:linux:rpm": "npm run build && node scripts/create-simple-icon.js && electron-builder --config electron-builder.dev.json --publish=always --linux rpm",
    "publish:dev:linux:tar": "npm run build && node scripts/create-simple-icon.js && electron-builder --config electron-builder.dev.json --publish=always --linux tar.gz",
    "publish:dev:all": "npm run build && node scripts/create-simple-icon.js && electron-builder --config electron-builder.dev.json --publish=always --mac --win --linux",
    "publish:beta": "npm run build && electron-builder --config electron-builder.beta.json --publish=always --mac --win --linux",
    "publish:beta:mac": "npm run build && node scripts/create-simple-icon.js && electron-builder --config electron-builder.beta.json --publish=always --mac",
    "publish:beta:mac:arm64": "npm run build && node scripts/create-simple-icon.js && electron-builder --config electron-builder.beta.json --publish=always --mac --arm64",
    "publish:beta:mac:x64": "npm run build && node scripts/create-simple-icon.js && electron-builder --config electron-builder.beta.json --publish=always --mac --x64",
    "publish:beta:win": "npm run build && node scripts/create-simple-icon.js && electron-builder --config electron-builder.beta.json --publish=always --win",
    "publish:beta:win:arm64": "npm run build && node scripts/create-simple-icon.js && electron-builder --config electron-builder.beta.json --publish=always --win --arm64",
    "publish:beta:win:x64": "npm run build && node scripts/create-simple-icon.js && electron-builder --config electron-builder.beta.json --publish=always --win --x64",
    "publish:beta:linux": "npm run build && node scripts/create-simple-icon.js && electron-builder --config electron-builder.beta.json --publish=always --linux",
    "publish:beta:linux:appimage": "npm run build && node scripts/create-simple-icon.js && electron-builder --config electron-builder.beta.json --publish=always --linux AppImage",
    "publish:beta:linux:deb": "npm run build && node scripts/create-simple-icon.js && electron-builder --config electron-builder.beta.json --publish=always --linux deb",
    "publish:beta:linux:rpm": "npm run build && node scripts/create-simple-icon.js && electron-builder --config electron-builder.beta.json --publish=always --linux rpm",
    "publish:beta:linux:tar": "npm run build && node scripts/create-simple-icon.js && electron-builder --config electron-builder.beta.json --publish=always --linux tar.gz",
    "publish:beta:all": "npm run build && node scripts/create-simple-icon.js && electron-builder --config electron-builder.beta.json --publish=always --mac --win --linux",
    "package:prod": "npm run build && electron-builder --config electron-builder.production.json",
    "package:prod:win": "npm run build && electron-builder --config electron-builder.production.json --win",
    "package:prod:mac": "npm run build && electron-builder --config electron-builder.production.json --mac",
    "package:prod:mac:arm64": "npm run build && electron-builder --config electron-builder.production.json --mac --arm64",
    "package:prod:mac:x64": "npm run build && electron-builder --config electron-builder.production.json --mac --x64",
    "package:prod:linux": "npm run build && electron-builder --config electron-builder.production.json --linux",
    "package:prod:linux:appimage": "npm run build && electron-builder --config electron-builder.production.json --linux AppImage",
    "package:prod:linux:deb": "npm run build && electron-builder --config electron-builder.production.json --linux deb",
    "package:prod:linux:rpm": "npm run build && electron-builder --config electron-builder.production.json --linux rpm",
    "package:prod:linux:snap": "npm run build && electron-builder --config electron-builder.production.json --linux snap",
    "package:prod:linux:tar": "npm run build && electron-builder --config electron-builder.production.json --linux tar.gz",
    "publish:prod": "npm run build && electron-builder --config electron-builder.production.json --publish=always --mac --win --linux",
    "publish:prod:all": "npm run build && node scripts/create-simple-icon.js && electron-builder --config electron-builder.production.json --publish=always --mac --win --linux",
    "publish:prod:win": "npm run build && electron-builder --config electron-builder.production.json --win --publish=always",
    "publish:prod:mac": "npm run build && electron-builder --config electron-builder.production.json --mac --publish=always",
    "publish:prod:mac:arm64": "npm run build && electron-builder --config electron-builder.production.json --mac --arm64 --publish=always",
    "publish:prod:mac:x64": "npm run build && electron-builder --config electron-builder.production.json --mac --x64 --publish=always",
    "publish:prod:linux": "npm run build && electron-builder --config electron-builder.production.json --linux --publish=always",
    "publish:prod:linux:appimage": "npm run build && electron-builder --config electron-builder.production.json --linux AppImage --publish=always",
    "publish:prod:linux:deb": "npm run build && electron-builder --config electron-builder.production.json --linux deb --publish=always",
    "publish:prod:linux:rpm": "npm run build && electron-builder --config electron-builder.production.json --linux rpm --publish=always",
    "publish:prod:linux:snap": "npm run build && electron-builder --config electron-builder.production.json --linux snap --publish=always",
    "publish:prod:linux:tar": "npm run build && electron-builder --config electron-builder.production.json --linux tar.gz --publish=always",
    "version:dev": "node scripts/version-dev.js",
    "version:beta": "node scripts/version-beta.js",
    "version:prod": "node scripts/version-prod.js",
    "setup:signing": "node scripts/setup-signing.js",
    "check:certificates": "node scripts/setup-signing.js check",
    "create:env-files": "node scripts/create-env-files.js"
  },
  "keywords": [
    "electron",
    "env",
    "editor"
  ],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@xstate/react": "^3.2.2",
    "electron-is-dev": "^2.0.0",
    "electron-updater": "^6.1.8",
    "electron-store": "^8.1.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "xstate": "^4.38.2"
  },
  "devDependencies": {
    "@types/electron": "^1.6.10",
    "@types/node": "^20.10.5",
    "@types/react": "^18.2.45",
    "@types/react-dom": "^18.2.18",
    "cpx": "^1.5.0",
    "electron": "28.3.3",
    "electron-builder": "^24.13.3",
    "esbuild": ">=0.25.0",
    "eslint": "^8.56.0",
    "typescript": "^5.3.3"
  },
  "build": {
    "appId": "com.ddalab.configmanager",
    "productName": "DDALAB ConfigManager",
    "directories": {
      "output": "release"
    },
    "files": [
      "dist/**/*",
      "node_modules/**/*",
      "package.json",
      "src/assets/**/*"
    ],
    "publish": {
      "provider": "github",
      "owner": "sdraeger",
      "repo": "DDALAB"
    },
    "mac": {
      "target": "dmg",
      "category": "public.app-category.developer-tools"
    },
    "win": {
      "target": "nsis",
      "icon": "build/icon.ico"
    },
    "linux": {
      "target": "AppImage",
      "icon": "build/icon.png"
    },
    "nsis": {
      "oneClick": false,
      "allowToChangeInstallationDirectory": true,
      "createDesktopShortcut": true,
      "createStartMenuShortcut": true
    }
  },
  "asar": true
}