[project]
name = "python"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "aiofiles>=23.2.1",
    "aiohttp>=3.9.3",
    "aioredis>=2.0.0",
    "asyncpg>=0.27.0",
    "bcrypt==4.0.1",
    "click>=8.1.8",
    "cryptography>=41.0.0",
    "dda-py>=0.1.4",
    "email-validator>=2.0.0",
    "fastapi>=0.68.0",
    "gql>=3.4.1",
    "greenlet>=3.2.2",
    "gunicorn>=23.0.0",
    "httpx>=0.24.0",
    "loguru>=0.6.0",
    "matplotlib>=3.7.0",
    "minio>=7.1.0",
    "mne>=1.6.0",
    "numpy>=1.21.0",
    "opentelemetry-api>=1.11.0",
    "opentelemetry-exporter-otlp>=1.11.0",
    "opentelemetry-exporter-otlp-proto-http>=1.32.0",
    "opentelemetry-instrumentation>=0.53b0",
    "opentelemetry-instrumentation-fastapi>=0.30b1",
    "opentelemetry-sdk>=1.11.0",
    "pandas>=1.3.0",
    "passlib[bcrypt]>=1.7.4",
    "pre-commit>=3.5.0",
    "prometheus-client>=0.14.0",
    "psycopg2-binary>=2.9.0",
    "pydantic[email]>=2.0.0",
    "pydantic-settings>=2.0.0",
    "pyedflib>=0.1.0",
    "pyhumps>=3.8.0",
    "pytest>=8.4.1",
    "pytest-xdist>=3.8.0",
    "python-dateutil>=2.8.2",
    "python-jose[cryptography]>=3.3.0",
    "python-multipart>=0.0.5",
    "redis>=5.0.0",
    "requests>=2.28.0",
    "requests-mock>=1.11.0",
    "requests-toolbelt>=1.0.0",
    "ruff>=0.1.6",
    "scipy>=1.7.0",
    "sqlalchemy>=2.0.0",
    "strawberry-graphql[fastapi]>=0.205.0",
    "typing-extensions>=4.5.0",
    "uvicorn>=0.15.0",
    "psutil>=5.9.0",
    "docker>=6.0.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
asyncio_mode = "auto"
addopts = "--strict-markers"
markers = [
	"integration: marks tests as integration tests",
	"realintegration: marks tests that need real external services (like Directus)",
]

[tool.coverage.run]
source = ["ddalab", "server"]
omit = ["tests/*", "**/__pycache__/*", "**/__init__.py"]

[tool.coverage.report]
exclude_lines = [
	"pragma: no cover",
	"def __repr__",
	"raise NotImplementedError",
	"if __name__ == .__main__.:",
	"pass",
	"raise ImportError",
]
